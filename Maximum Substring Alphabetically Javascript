Given a string determine the alphabetically maximum substring:

Example
input str='baca' then output 'ca' or input str= 'ba' then output 'ba' or input str= 'aaa' then output 'aaa' or input str= 'banana' then output 'nana'

The unique substrings:['b','ba','bac','baca','a','ac','aca','c','ca']

Arranging the substring alphabetically:['a','ac','aca','b','ba','bac','baca','c','ca']

The maximum substring alphabetically:'ca'

Constraints:

1≤ length of s≤100
all character of s are in range ascii[a-z]

Solution:

function maxSubstring(str) {
	  // when all the characters are same
	  if(new Set(str).size === 1 || str.length === 1) return str
	  let indexes = findMaxIndexes(str)
	  
	  // when largest character appear once only
	  if(indexes.length === 1){
		return str.slice(indexes[0])
	  }
	  
	  // when largest character appears more than once
	  let max = ''
	  for(let i=0; i<indexes.length; i++){
		let temp = str.slice(indexes[i])
		if(temp > max){
		  max = temp
		}
	  }
	  return max
	};
	

	function findMaxIndexes(str){
	  let max = ''
	  let indexes = []
	  for(let i=0; i<str.length; i++){
		let char = str[i]
		if(char === max){
		  indexes.push(i)
		}else if(char > max){
		  max = char
		  indexes = [i]
		}
	  }
	  return indexes
	}
	document.write(maxSubstring('baca')); // output will be ca
